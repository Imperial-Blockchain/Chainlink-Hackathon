{
  "address": "0xa24f5713e4af49cf9476fa23b7815820b76878ed",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "governanceCharity",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governanceToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governanceTreasury",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governanceVoter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "charity",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "treasury",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "registry",
          "type": "address"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "charity",
          "type": "address"
        }
      ],
      "name": "setGovernanceCharity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "setGovernanceToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "treasury",
          "type": "address"
        }
      ],
      "name": "setGovernanceTreasury",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "voter",
          "type": "address"
        }
      ],
      "name": "setGovernanceVoter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registry",
          "type": "address"
        }
      ],
      "name": "setTokenRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenRegistry",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xf19ab2b2290a3e50c5f66141fe33767bae32f6ae92971c6c0ef2a165ff73b826",
  "receipt": {
    "to": null,
    "from": "0x2d949c8bc0d866783c0a8629208cb9dd2a5d2302",
    "contractAddress": "0xa24f5713e4af49cf9476fa23b7815820b76878ed",
    "transactionIndex": "0x71",
    "gasUsed": "0xa15af",
    "logsBloom": "0x
    "blockHash": "0x5c3a2e765ba5017b665b503ceeae44cc4525f9988ab9a815a876d4e677f74ad3",
    "transactionHash": "0xf19ab2b2290a3e50c5f66141fe33767bae32f6ae92971c6c0ef2a165ff73b826",
    "logs": [
      {
        "address": "0xa24f5713e4af49cf9476fa23b7815820b76878ed",
        "blockHash": "0x5c3a2e765ba5017b665b503ceeae44cc4525f9988ab9a815a876d4e677f74ad3",
        "blockNumber": "0x7928a1",
        "data": "0x",
        "logIndex": "0xf7",
        "removed": false,
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000002d949c8bc0d866783c0a8629208cb9dd2a5d2302"
        ],
        "transactionHash": "0xf19ab2b2290a3e50c5f66141fe33767bae32f6ae92971c6c0ef2a165ff73b826",
        "transactionIndex": "0x71"
      }
    ],
    "blockNumber": "0x7928a1",
    "cumulativeGasUsed": "0x13f2c47",
    "status": "0x1"
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "01556064370eb7570a00448a246c9b8d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"governanceCharity\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governanceToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governanceTreasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governanceVoter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"charity\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"registry\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"charity\",\"type\":\"address\"}],\"name\":\"setGovernanceCharity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"setGovernanceToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"}],\"name\":\"setGovernanceTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"setGovernanceVoter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"registry\",\"type\":\"address\"}],\"name\":\"setTokenRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A very simple registry\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GovernanceRegistry.sol\":\"GovernanceRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/GovernanceRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./interfaces/IGovernanceRegistry.sol\\\";\\n\\n/** @dev A very simple registry\\n */\\ncontract GovernanceRegistry is IGovernanceRegistry, Ownable {\\n    //----- Storage variables -----\\n    address public override governanceToken;\\n    address public override governanceCharity;\\n    address public override governanceVoter;\\n    address public override governanceTreasury;\\n    address public override tokenRegistry;\\n\\n\\n    function init(address token, address charity, address voter, address treasury, address registry) external onlyOwner {\\n        // Set contract addresses\\n        governanceToken = token;\\n        governanceCharity = charity;\\n        governanceVoter = voter;\\n        governanceTreasury = treasury;\\n        tokenRegistry = registry;\\n    }\\n\\n    function setGovernanceToken(address token) external override onlyOwner {\\n        governanceToken = token;\\n    }\\n\\n    function setGovernanceCharity(address charity) external override onlyOwner {\\n        governanceCharity = charity;\\n    }\\n\\n    function setGovernanceVoter(address voter) external override onlyOwner {\\n        governanceVoter = voter;\\n    }\\n\\n    function setGovernanceTreasury(address treasury) external override onlyOwner {\\n        governanceTreasury = treasury;\\n    }\\n\\n    function setTokenRegistry(address registry) external override onlyOwner {\\n        tokenRegistry = registry;\\n    }\\n}\\n\",\"keccak256\":\"0xfb1d18ecf5d4b0481e92926c323422740faed3b16626ca0e80fa1b77cd075f7e\",\"license\":\"MIT\"},\"contracts/interfaces/IGovernanceRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\ninterface IGovernanceRegistry {\\n    function governanceToken() external view returns (address token);\\n\\n    function setGovernanceToken(address token) external;\\n\\n    function governanceCharity() external view returns (address charity);\\n\\n    function setGovernanceCharity(address charity) external;\\n\\n    function governanceVoter() external view returns (address voting);\\n\\n    function setGovernanceVoter(address voting) external;\\n\\n    function governanceTreasury() external view returns (address treasury);\\n\\n    function setGovernanceTreasury(address treasury) external;\\n\\n    function tokenRegistry() external view returns (address);\\n\\n    function setTokenRegistry(address registry) external;\\n}\\n\",\"keccak256\":\"0xc7fed182de2ec9e722ca0fb051e5b83d967eaa32f6fdfd5d58fd17e18fd7e275\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610a838061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638da5cb5b1161008c578063d435837f11610066578063d435837f146101fd578063f2fde38b1461021b578063f857017014610237578063f96dae0a14610253576100ea565b80638da5cb5b146101a557806398ed2fe7146101c35780639d23c4c7146101df576100ea565b8063365f383f116100c8578063365f383f1461014357806344466e9c14610161578063715018a61461017d5780637bb78e5814610187576100ea565b80632c592775146100ef578063359ef75b1461010b57806335a5af9214610127575b600080fd5b6101096004803603810190610104919061086c565b610271565b005b61012560048036038101906101209190610899565b6102bd565b005b610141600480360381019061013c919061086c565b610411565b005b61014b61045d565b6040516101589190610923565b60405180910390f35b61017b6004803603810190610176919061086c565b610483565b005b6101856104cf565b005b61018f6104e3565b60405161019c9190610923565b60405180910390f35b6101ad610509565b6040516101ba9190610923565b60405180910390f35b6101dd60048036038101906101d8919061086c565b610532565b005b6101e761057e565b6040516101f49190610923565b60405180910390f35b6102056105a4565b6040516102129190610923565b60405180910390f35b6102356004803603810190610230919061086c565b6105ca565b005b610251600480360381019061024c919061086c565b61064d565b005b61025b610699565b6040516102689190610923565b60405180910390f35b6102796106bf565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6102c56106bf565b84600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b6104196106bf565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61048b6106bf565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6104d76106bf565b6104e1600061073d565b565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61053a6106bf565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6105d26106bf565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610641576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610638906109c1565b60405180910390fd5b61064a8161073d565b50565b6106556106bf565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106c7610801565b73ffffffffffffffffffffffffffffffffffffffff166106e5610509565b73ffffffffffffffffffffffffffffffffffffffff161461073b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073290610a2d565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108398261080e565b9050919050565b6108498161082e565b811461085457600080fd5b50565b60008135905061086681610840565b92915050565b60006020828403121561088257610881610809565b5b600061089084828501610857565b91505092915050565b600080600080600060a086880312156108b5576108b4610809565b5b60006108c388828901610857565b95505060206108d488828901610857565b94505060406108e588828901610857565b93505060606108f688828901610857565b925050608061090788828901610857565b9150509295509295909350565b61091d8161082e565b82525050565b60006020820190506109386000830184610914565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006109ab60268361093e565b91506109b68261094f565b604082019050919050565b600060208201905081810360008301526109da8161099e565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610a1760208361093e565b9150610a22826109e1565b602082019050919050565b60006020820190508181036000830152610a4681610a0a565b905091905056fea2646970667358221220b0775046de10ecf5d49a80310a4ae3c3555e442ace0e5cc04b6e16725906d05864736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638da5cb5b1161008c578063d435837f11610066578063d435837f146101fd578063f2fde38b1461021b578063f857017014610237578063f96dae0a14610253576100ea565b80638da5cb5b146101a557806398ed2fe7146101c35780639d23c4c7146101df576100ea565b8063365f383f116100c8578063365f383f1461014357806344466e9c14610161578063715018a61461017d5780637bb78e5814610187576100ea565b80632c592775146100ef578063359ef75b1461010b57806335a5af9214610127575b600080fd5b6101096004803603810190610104919061086c565b610271565b005b61012560048036038101906101209190610899565b6102bd565b005b610141600480360381019061013c919061086c565b610411565b005b61014b61045d565b6040516101589190610923565b60405180910390f35b61017b6004803603810190610176919061086c565b610483565b005b6101856104cf565b005b61018f6104e3565b60405161019c9190610923565b60405180910390f35b6101ad610509565b6040516101ba9190610923565b60405180910390f35b6101dd60048036038101906101d8919061086c565b610532565b005b6101e761057e565b6040516101f49190610923565b60405180910390f35b6102056105a4565b6040516102129190610923565b60405180910390f35b6102356004803603810190610230919061086c565b6105ca565b005b610251600480360381019061024c919061086c565b61064d565b005b61025b610699565b6040516102689190610923565b60405180910390f35b6102796106bf565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6102c56106bf565b84600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b6104196106bf565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61048b6106bf565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6104d76106bf565b6104e1600061073d565b565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61053a6106bf565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6105d26106bf565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610641576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610638906109c1565b60405180910390fd5b61064a8161073d565b50565b6106556106bf565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106c7610801565b73ffffffffffffffffffffffffffffffffffffffff166106e5610509565b73ffffffffffffffffffffffffffffffffffffffff161461073b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073290610a2d565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108398261080e565b9050919050565b6108498161082e565b811461085457600080fd5b50565b60008135905061086681610840565b92915050565b60006020828403121561088257610881610809565b5b600061089084828501610857565b91505092915050565b600080600080600060a086880312156108b5576108b4610809565b5b60006108c388828901610857565b95505060206108d488828901610857565b94505060406108e588828901610857565b93505060606108f688828901610857565b925050608061090788828901610857565b9150509295509295909350565b61091d8161082e565b82525050565b60006020820190506109386000830184610914565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006109ab60268361093e565b91506109b68261094f565b604082019050919050565b600060208201905081810360008301526109da8161099e565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610a1760208361093e565b9150610a22826109e1565b602082019050919050565b60006020820190508181036000830152610a4681610a0a565b905091905056fea2646970667358221220b0775046de10ecf5d49a80310a4ae3c3555e442ace0e5cc04b6e16725906d05864736f6c63430008110033",
  "devdoc": {
    "details": "A very simple registry",
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 53,
        "contract": "contracts/GovernanceRegistry.sol:GovernanceRegistry",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 6020,
        "contract": "contracts/GovernanceRegistry.sol:GovernanceRegistry",
        "label": "governanceToken",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 6023,
        "contract": "contracts/GovernanceRegistry.sol:GovernanceRegistry",
        "label": "governanceCharity",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 6026,
        "contract": "contracts/GovernanceRegistry.sol:GovernanceRegistry",
        "label": "governanceVoter",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 6029,
        "contract": "contracts/GovernanceRegistry.sol:GovernanceRegistry",
        "label": "governanceTreasury",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 6032,
        "contract": "contracts/GovernanceRegistry.sol:GovernanceRegistry",
        "label": "tokenRegistry",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}