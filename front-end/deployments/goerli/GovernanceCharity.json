{
  "address": "0x310fdf3f57604d0BA77e34B0244e8d1D2285b5E2",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_registry",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "charity",
          "type": "address"
        }
      ],
      "name": "CancelledFunding",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "charity",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "Registered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "charity",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "epoch",
          "type": "uint256"
        }
      ],
      "name": "RequestedFunding",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "charity",
          "type": "address"
        }
      ],
      "name": "Verified",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "cancelRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        }
      ],
      "name": "getFundingRequest",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "charity",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "funded",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct IGovernanceCharity.Request",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        }
      ],
      "name": "notFunded",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "register",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requestCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "requestFunding",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "epoch",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "charity",
          "type": "address"
        }
      ],
      "name": "statusOf",
      "outputs": [
        {
          "internalType": "enum IGovernanceCharity.Status",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "charity",
          "type": "address"
        }
      ],
      "name": "verify",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xbf3c6196b36051a87787dc4f652c680a1ac19e748153568105e7127d65c140f2",
  "receipt": {
    "to": null,
    "from": "0x2d949C8bC0d866783C0a8629208cb9dd2a5d2302",
    "contractAddress": "0x310fdf3f57604d0BA77e34B0244e8d1D2285b5E2",
    "transactionIndex": 52,
    "gasUsed": "1250710",
    "logsBloom": "0x
    "blockHash": "0x910a61253d71fb94eaac7488ffe9bc8791940a49b08c5d8866019ae49687ee61",
    "transactionHash": "0xbf3c6196b36051a87787dc4f652c680a1ac19e748153568105e7127d65c140f2",
    "logs": [
      {
        "transactionIndex": 52,
        "blockNumber": 7959027,
        "transactionHash": "0xbf3c6196b36051a87787dc4f652c680a1ac19e748153568105e7127d65c140f2",
        "address": "0x310fdf3f57604d0BA77e34B0244e8d1D2285b5E2",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000002d949c8bc0d866783c0a8629208cb9dd2a5d2302"
        ],
        "data": "0x",
        "logIndex": 99,
        "blockHash": "0x910a61253d71fb94eaac7488ffe9bc8791940a49b08c5d8866019ae49687ee61"
      }
    ],
    "blockNumber": 7959027,
    "cumulativeGasUsed": "6158218",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xa24f5713e4af49cf9476fa23b7815820b76878ed"
  ],
  "numDeployments": 2,
  "solcInputHash": "dccfbe3792c7bc45204dc1914c8cd437",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_registry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"charity\",\"type\":\"address\"}],\"name\":\"CancelledFunding\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"charity\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"}],\"name\":\"Registered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"charity\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"}],\"name\":\"RequestedFunding\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"charity\",\"type\":\"address\"}],\"name\":\"Verified\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"cancelRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"getFundingRequest\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"charity\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"funded\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IGovernanceCharity.Request\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"notFunded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"requestFunding\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"charity\",\"type\":\"address\"}],\"name\":\"statusOf\",\"outputs\":[{\"internalType\":\"enum IGovernanceCharity.Status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"charity\",\"type\":\"address\"}],\"name\":\"verify\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"CancelledFunding(address)\":{\"notice\":\"Emitted when a charity cancels their funding request\"},\"Registered(address,bytes)\":{\"notice\":\"Emitted when a charity is registered to be verified.\"},\"RequestedFunding(address,uint256,uint256)\":{\"notice\":\"Emitted when a charity requests funding\"},\"Verified(address)\":{\"notice\":\"Emitted when a charity is verified.\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GovernanceCharity.sol\":\"GovernanceCharity\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/GovernanceCharity.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\nimport \\\"./interfaces/IGovernanceCharity.sol\\\";\\nimport \\\"./interfaces/IGovernanceVoting.sol\\\";\\nimport \\\"./interfaces/IGovernanceRegistry.sol\\\";\\n\\ncontract GovernanceCharity is IGovernanceCharity, Ownable {\\n    //----------------------------------------------------- storage\\n\\n    uint256 public override requestCounter;\\n\\n    address public immutable override registry;\\n\\n    mapping(address => Status) private _status;\\n\\n    mapping(uint256 => Request) private _requests;\\n\\n    //----------------------------------------------------- modifiers\\n\\n    modifier onlyVerified(address operator) {\\n        require(_status[operator] == Status.Verified, \\\"Not verified\\\");\\n        _;\\n    }\\n\\n    //----------------------------------------------------- misc functions\\n\\n    constructor(address _registry) Ownable() {\\n        registry = _registry;\\n    }\\n\\n    function register(bytes calldata proof) external override {\\n        require(_status[msg.sender] == Status.None, \\\"Already registered\\\");\\n\\n        _status[msg.sender] = Status.Registered;\\n\\n        emit Registered(msg.sender, proof);\\n    }\\n\\n    function verify(address charity) external override onlyOwner {\\n        require(_status[charity] == Status.Registered, \\\"Not registered\\\");\\n\\n        _status[charity] = Status.Verified;\\n        emit Verified(charity);\\n    }\\n\\n    function requestFunding(uint256 amount)\\n        external\\n        override\\n        onlyVerified(msg.sender)\\n        returns (uint256 epoch)\\n    {\\n        // Check we have non-zero amount\\n        require(amount > 0, \\\"Must request non-zero amounts\\\");\\n\\n        // Make a call to GovernanceVoting to try add the charity to the current proposal\\n        epoch = IGovernanceVoting(IGovernanceRegistry(registry).governanceVoter()).addCharity(msg.sender, amount);\\n    \\n        emit RequestedFunding(msg.sender, amount, epoch);\\n    }\\n\\n    function cancelRequest() \\n        external\\n        override\\n        onlyVerified(msg.sender) \\n    {\\n        // Wipe out charity entry from a pending proposal\\n        IGovernanceVoting(IGovernanceRegistry(registry).governanceVoter()).removeCharity(msg.sender);\\n\\n        emit CancelledFunding(msg.sender);\\n    }\\n\\n    //----------------------------------------------------- accessors\\n\\n    function notFunded(uint256 requestId) external view override returns (bool) {\\n        Request memory request = _requests[requestId];\\n        return request.charity != address(0) && !request.funded;\\n    }\\n\\n    function statusOf(address charity) external view override returns (Status) {\\n        return _status[charity];\\n    }\\n\\n    function getFundingRequest(uint256 requestId) external view override returns (Request memory) {\\n        return _requests[requestId];\\n    }\\n}\\n\",\"keccak256\":\"0xccc511467fd3096e0fd1406a2fcf12f720014a45362e741bf7f5e7dc27877a35\",\"license\":\"MIT\"},\"contracts/interfaces/IGovernanceCharity.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\n/** @dev This contract is the main interface for charities\\n        and allows charities to register and be verified\\n */\\ninterface IGovernanceCharity {\\n    //----------------------------------------------------- types\\n\\n    enum Status {\\n        None,\\n        Registered,\\n        Verified\\n    }\\n\\n    struct Request {\\n        address charity;\\n        bool funded;\\n        uint256 amount;\\n    }\\n\\n    //----------------------------------------------------- events\\n\\n\\n    /// @notice Emitted when a charity is registered to be verified.\\n    event Registered(address charity, bytes proof);\\n\\n    /// @notice Emitted when a charity is verified.\\n    event Verified(address charity);\\n\\n    /// @notice Emitted when a charity requests funding\\n    event RequestedFunding(address charity, uint256 amount, uint256 epoch);\\n\\n    /// @notice Emitted when a charity cancels their funding request\\n    event CancelledFunding(address charity);\\n    //----------------------------------------------------- external functions\\n\\n    function register(bytes calldata proof) external;\\n\\n    function verify(address charity) external;\\n\\n    function requestFunding(uint256 amount) external returns (uint256 epoch);\\n\\n    function cancelRequest() external;\\n\\n    //----------------------------------------------------- accessor functions\\n\\n    function notFunded(uint256 requestId) external view returns (bool);\\n\\n    function requestCounter() external view returns (uint256);\\n\\n    function registry() external view returns (address);\\n\\n    function statusOf(address charity) external view returns (Status);\\n\\n    function getFundingRequest(uint256 requestId) external view returns (Request memory);\\n}\\n\",\"keccak256\":\"0x1cfd479d8247f0f3434ebdedf953f4b5dc3980557860ae1a73b6441262eb6065\",\"license\":\"MIT\"},\"contracts/interfaces/IGovernanceRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\ninterface IGovernanceRegistry {\\n    function governanceToken() external view returns (address token);\\n\\n    function setGovernanceToken(address token) external;\\n\\n    function governanceCharity() external view returns (address charity);\\n\\n    function setGovernanceCharity(address charity) external;\\n\\n    function governanceVoter() external view returns (address voting);\\n\\n    function setGovernanceVoter(address voting) external;\\n\\n    function governanceTreasury() external view returns (address treasury);\\n\\n    function setGovernanceTreasury(address treasury) external;\\n\\n    function tokenRegistry() external view returns (address);\\n\\n    function setTokenRegistry(address registry) external;\\n}\\n\",\"keccak256\":\"0xc7fed182de2ec9e722ca0fb051e5b83d967eaa32f6fdfd5d58fd17e18fd7e275\",\"license\":\"MIT\"},\"contracts/interfaces/IGovernanceVoting.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (governance/IGovernor.sol)\\n// Modified Governor contract for chainlink hackathon\\n\\npragma solidity ^0.8.9;\\n\\n/**\\n * @dev Interface of the {Governor} core.\\n *\\n * _Available since v4.3._\\n */\\nabstract contract IGovernanceVoting {\\n    enum ProposalState {\\n        None,\\n        Pending,\\n        Active,\\n        Queued,\\n        Executed\\n    }\\n\\n    /**\\n     * @dev Emitted when a proposal is created.\\n     */\\n    event ProposalCreated(\\n        uint256 epoch,\\n        address proposer,\\n        uint256 startTimestamp,\\n        uint256 endTimestamp,\\n        string description\\n    );\\n\\n    /**\\n     * @dev Emitted when a proposal is executed.\\n     */\\n    event ProposalExecuted(uint256 proposalId);\\n\\n    /**\\n     * @dev Emitted when a vote is cast without params.\\n     *\\n     * Note: `support` values should be seen as buckets. Their interpretation depends on the voting module used.\\n     */\\n    event VoteCast(address indexed voter, uint256 proposalId, address charity, uint256 votes, string description);\\n\\n\\n    /**\\n     * @notice module:core\\n     * @dev Name of the governor instance (used in building the ERC712 domain separator).\\n     */\\n    function name() public view virtual returns (string memory);\\n\\n    /**\\n     * @notice module:core\\n     * @dev Version of the governor instance (used in building the ERC712 domain separator). Default: \\\"1\\\"\\n     */\\n    function version() public view virtual returns (string memory);\\n\\n    /**\\n     * @notice module:core\\n     * @dev Hashing function used to (re)build the proposal id from the proposal details..\\n     */\\n    function hashProposal(\\n        uint256 epoch\\n    ) public pure virtual returns (uint256);\\n\\n    /**\\n     * @notice module:core\\n     * @dev Current state of a proposal, following Compound's convention\\n     */\\n    function state(uint256 proposalId) public view virtual returns (ProposalState);\\n\\n    /**\\n     * @notice module:core\\n     * @dev Block number used to retrieve user's votes and quorum. As per Compound's Comp and OpenZeppelin's\\n     * ERC20Votes, the snapshot is performed at the end of this block. Hence, voting for this proposal starts at the\\n     * beginning of the following block.\\n     */\\n    function proposalSnapshot(uint256 proposalId) public view virtual returns (uint256);\\n\\n    /**\\n     * @notice module:core\\n     * @dev Block number at which votes close. Votes close at the end of this block, so it is possible to cast a vote\\n     * during this block.\\n     */\\n    function proposalDeadline(uint256 proposalId) public view virtual returns (uint256);\\n\\n    /**\\n     * @notice module:user-config\\n     * @dev Delay, in number of block, between the proposal is created and the vote starts. This can be increassed to\\n     * leave time for users to buy voting power, or delegate it, before the voting of a proposal starts.\\n     */\\n    function votingDelay() public view virtual returns (uint256);\\n\\n    /**\\n     * @notice module:user-config\\n     * @dev Delay, in number of blocks, between the vote start and vote ends.\\n     *\\n     * NOTE: The {votingDelay} can delay the start of the vote. This must be considered when setting the voting\\n     * duration compared to the voting delay.\\n     */\\n    function votingPeriod() public view virtual returns (uint256);\\n    /**\\n     * @notice module:reputation\\n     * @dev Voting power of an `account` at a specific `blockNumber`.\\n     *\\n     * Note: this can be implemented in a number of ways, for example by reading the delegated balance from one (or\\n     * multiple), {ERC20Votes} tokens.\\n     */\\n    function getVotes(address account, uint256 blockNumber) public view virtual returns (uint256);\\n    /**\\n     * @notice module:voting\\n     * @dev Returns whether `account` has cast a vote on `proposalId`.\\n     */\\n    function numVotes(uint256 proposalId, address account) external view virtual returns (uint256);\\n\\n    /**\\n     * @dev Create a new proposal. Vote start {IGovernor-votingDelay} blocks after the proposal is created and ends\\n     * {IGovernor-votingPeriod} blocks after the voting starts.\\n     *\\n     * Emits a {ProposalCreated} event.\\n     */\\n    function propose(\\n        string memory description\\n    ) public virtual returns (uint256 proposalId);\\n\\n    /**\\n     * @dev Execute a successful proposal. This requires the quorum to be reached, the vote to be successful, and the\\n     * deadline to be reached.\\n     *\\n     * Emits a {ProposalExecuted} event.\\n     *\\n     * Note: some module can modify the requirements for execution, for example by adding an additional timelock.\\n     */\\n    function execute(\\n        uint256 proposalId\\n    ) public virtual returns (uint256);\\n\\n    /**\\n     * @dev Add a charity to the queued proposal or to the next one if we register too late\\n\\n       Ensure only GovernanceCharity can call this function\\n     */\\n    function addCharity(address charity, uint256 amount) external virtual returns (uint256 epoch);\\n\\n    function removeCharity(address charity) external virtual;\\n\\n    /**\\n     * @dev Cast a vote\\n     *\\n     * Emits a {VoteCast} event.\\n     */\\n    function castVote(uint256 proposalId, address charity) public virtual returns (uint256 balance);\\n\\n    /**\\n     * @dev Cast a vote with a reason\\n     *\\n     * Emits a {VoteCast} event.\\n     */\\n    function castVoteWithReason(\\n        uint256 proposalId,\\n        address charity,\\n        string calldata reason\\n    ) public virtual returns (uint256 balance);\\n\\n    /**\\n     * @dev Cast a vote using the user's cryptographic signature.\\n     *\\n     * Emits a {VoteCast} event.\\n     \\n    function castVoteBySig(\\n        uint256 proposalId,\\n        uint8 support,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) public virtual returns (uint256 balance);\\n    */\\n}\\n\",\"keccak256\":\"0x35a5de1e301bd27f883b57d810b5076fd1bc3717e188cedf806dde4abe47ffac\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200174f3803806200174f8339818101604052810190620000379190620001c8565b620000576200004b6200009260201b60201c565b6200009a60201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505050620001fa565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001908262000163565b9050919050565b620001a28162000183565b8114620001ae57600080fd5b50565b600081519050620001c28162000197565b92915050565b600060208284031215620001e157620001e06200015e565b5b6000620001f184828501620001b1565b91505092915050565b60805161152b62000224600039600081816103dd0152818161069c01526108cd015261152b6000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063851b16f511610071578063851b16f5146101795780638da5cb5b14610183578063973a814e146101a157806397a5d5b5146101bf578063a1aaf1b5146101ef578063f2fde38b1461021f576100b4565b80632fd4fe64146100b95780635cd9ef81146100e957806363a9c3d714610119578063715018a6146101355780637b1039991461013f57806382fbdc9c1461015d575b600080fd5b6100d360048036038101906100ce9190610db2565b61023b565b6040516100e09190610e8c565b60405180910390f35b61010360048036038101906100fe9190610db2565b6102e3565b6040516101109190610eb6565b60405180910390f35b610133600480360381019061012e9190610efd565b61052a565b005b61013d610686565b005b61014761069a565b6040516101549190610f39565b60405180910390f35b61017760048036038101906101729190610fb9565b6106be565b005b610181610818565b005b61018b6109fe565b6040516101989190610f39565b60405180910390f35b6101a9610a27565b6040516101b69190610eb6565b60405180910390f35b6101d960048036038101906101d49190610efd565b610a2d565b6040516101e6919061107d565b60405180910390f35b61020960048036038101906102049190610db2565b610a83565b60405161021691906110a7565b60405180910390f35b61023960048036038101906102349190610efd565b610b6c565b005b610243610d39565b600360008381526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff161515151581526020016001820154815250509050919050565b6000336002808111156102f9576102f8611006565b5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600281111561035857610357611006565b5b14610398576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038f9061111f565b60405180910390fd5b600083116103db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d29061118b565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16637bb78e586040518163ffffffff1660e01b8152600401602060405180830381865afa158015610446573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046a91906111c0565b73ffffffffffffffffffffffffffffffffffffffff1663f5f2d28633856040518363ffffffff1660e01b81526004016104a49291906111ed565b6020604051808303816000875af11580156104c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e7919061122b565b91507f8e11e9f948b1e298f3c8e681f9f4b7138e8f9c2cf683f0dd9eaad17993594f7d33848460405161051c93929190611258565b60405180910390a150919050565b610532610bef565b6001600281111561054657610545611006565b5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660028111156105a5576105a4611006565b5b146105e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105dc906112db565b60405180910390fd5b60028060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083600281111561064757610646611006565b5b02179055507f6a6455914f452787eb3985452aceedc1000fb545e394eb3b370e3d08958e0a5b8160405161067b9190610f39565b60405180910390a150565b61068e610bef565b6106986000610c6d565b565b7f000000000000000000000000000000000000000000000000000000000000000081565b600060028111156106d2576106d1611006565b5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600281111561073157610730611006565b5b14610771576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076890611347565b60405180910390fd5b6001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360028111156107d4576107d3611006565b5b02179055507fb5ca2dfb0bd25603299b76fefa9fbe3abdc9f951bdfb7ffd208f93ab7f8e203c33838360405161080c939291906113c5565b60405180910390a15050565b3360028081111561082c5761082b611006565b5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600281111561088b5761088a611006565b5b146108cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c29061111f565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16637bb78e586040518163ffffffff1660e01b8152600401602060405180830381865afa158015610936573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095a91906111c0565b73ffffffffffffffffffffffffffffffffffffffff1663abefe591336040518263ffffffff1660e01b81526004016109929190610f39565b600060405180830381600087803b1580156109ac57600080fd5b505af11580156109c0573d6000803e3d6000fd5b505050507f3293d3a4541797063bf7ff3f65f1c0f336764b47da54e0408a3410dcdd8209bd336040516109f39190610f39565b60405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60015481565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b600080600360008481526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff161515151581526020016001820154815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1614158015610b6457508060200151155b915050919050565b610b74610bef565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610be3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bda90611469565b60405180910390fd5b610bec81610c6d565b50565b610bf7610d31565b73ffffffffffffffffffffffffffffffffffffffff16610c156109fe565b73ffffffffffffffffffffffffffffffffffffffff1614610c6b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c62906114d5565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600015158152602001600081525090565b600080fd5b600080fd5b6000819050919050565b610d8f81610d7c565b8114610d9a57600080fd5b50565b600081359050610dac81610d86565b92915050565b600060208284031215610dc857610dc7610d72565b5b6000610dd684828501610d9d565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e0a82610ddf565b9050919050565b610e1a81610dff565b82525050565b60008115159050919050565b610e3581610e20565b82525050565b610e4481610d7c565b82525050565b606082016000820151610e606000850182610e11565b506020820151610e736020850182610e2c565b506040820151610e866040850182610e3b565b50505050565b6000606082019050610ea16000830184610e4a565b92915050565b610eb081610d7c565b82525050565b6000602082019050610ecb6000830184610ea7565b92915050565b610eda81610dff565b8114610ee557600080fd5b50565b600081359050610ef781610ed1565b92915050565b600060208284031215610f1357610f12610d72565b5b6000610f2184828501610ee8565b91505092915050565b610f3381610dff565b82525050565b6000602082019050610f4e6000830184610f2a565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610f7957610f78610f54565b5b8235905067ffffffffffffffff811115610f9657610f95610f59565b5b602083019150836001820283011115610fb257610fb1610f5e565b5b9250929050565b60008060208385031215610fd057610fcf610d72565b5b600083013567ffffffffffffffff811115610fee57610fed610d77565b5b610ffa85828601610f63565b92509250509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811061104657611045611006565b5b50565b600081905061105782611035565b919050565b600061106782611049565b9050919050565b6110778161105c565b82525050565b6000602082019050611092600083018461106e565b92915050565b6110a181610e20565b82525050565b60006020820190506110bc6000830184611098565b92915050565b600082825260208201905092915050565b7f4e6f742076657269666965640000000000000000000000000000000000000000600082015250565b6000611109600c836110c2565b9150611114826110d3565b602082019050919050565b60006020820190508181036000830152611138816110fc565b9050919050565b7f4d7573742072657175657374206e6f6e2d7a65726f20616d6f756e7473000000600082015250565b6000611175601d836110c2565b91506111808261113f565b602082019050919050565b600060208201905081810360008301526111a481611168565b9050919050565b6000815190506111ba81610ed1565b92915050565b6000602082840312156111d6576111d5610d72565b5b60006111e4848285016111ab565b91505092915050565b60006040820190506112026000830185610f2a565b61120f6020830184610ea7565b9392505050565b60008151905061122581610d86565b92915050565b60006020828403121561124157611240610d72565b5b600061124f84828501611216565b91505092915050565b600060608201905061126d6000830186610f2a565b61127a6020830185610ea7565b6112876040830184610ea7565b949350505050565b7f4e6f742072656769737465726564000000000000000000000000000000000000600082015250565b60006112c5600e836110c2565b91506112d08261128f565b602082019050919050565b600060208201905081810360008301526112f4816112b8565b9050919050565b7f416c726561647920726567697374657265640000000000000000000000000000600082015250565b60006113316012836110c2565b915061133c826112fb565b602082019050919050565b6000602082019050818103600083015261136081611324565b9050919050565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b60006113a48385611367565b93506113b1838584611378565b6113ba83611387565b840190509392505050565b60006040820190506113da6000830186610f2a565b81810360208301526113ed818486611398565b9050949350505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006114536026836110c2565b915061145e826113f7565b604082019050919050565b6000602082019050818103600083015261148281611446565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006114bf6020836110c2565b91506114ca82611489565b602082019050919050565b600060208201905081810360008301526114ee816114b2565b905091905056fea26469706673582212207cb380bd5f0799fd04b71890e25695a0be9a86fa7c460ecf370af5fa561c21f964736f6c63430008110033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "CancelledFunding(address)": {
        "notice": "Emitted when a charity cancels their funding request"
      },
      "Registered(address,bytes)": {
        "notice": "Emitted when a charity is registered to be verified."
      },
      "RequestedFunding(address,uint256,uint256)": {
        "notice": "Emitted when a charity requests funding"
      },
      "Verified(address)": {
        "notice": "Emitted when a charity is verified."
      }
    },
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 53,
        "contract": "contracts/GovernanceCharity.sol:GovernanceCharity",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 5792,
        "contract": "contracts/GovernanceCharity.sol:GovernanceCharity",
        "label": "requestCounter",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 5800,
        "contract": "contracts/GovernanceCharity.sol:GovernanceCharity",
        "label": "_status",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_enum(Status)7627)"
      },
      {
        "astId": 5805,
        "contract": "contracts/GovernanceCharity.sol:GovernanceCharity",
        "label": "_requests",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_struct(Request)7634_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(Status)7627": {
        "encoding": "inplace",
        "label": "enum IGovernanceCharity.Status",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_enum(Status)7627)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => enum IGovernanceCharity.Status)",
        "numberOfBytes": "32",
        "value": "t_enum(Status)7627"
      },
      "t_mapping(t_uint256,t_struct(Request)7634_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct IGovernanceCharity.Request)",
        "numberOfBytes": "32",
        "value": "t_struct(Request)7634_storage"
      },
      "t_struct(Request)7634_storage": {
        "encoding": "inplace",
        "label": "struct IGovernanceCharity.Request",
        "members": [
          {
            "astId": 7629,
            "contract": "contracts/GovernanceCharity.sol:GovernanceCharity",
            "label": "charity",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 7631,
            "contract": "contracts/GovernanceCharity.sol:GovernanceCharity",
            "label": "funded",
            "offset": 20,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 7633,
            "contract": "contracts/GovernanceCharity.sol:GovernanceCharity",
            "label": "amount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}